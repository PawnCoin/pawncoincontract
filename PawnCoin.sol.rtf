{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 *Submitted for verification at Etherscan.io on 2022-04-23\
*/\
\
pragma solidity ^0.8.2;\
\
contract Token \{\
    mapping(address => uint) public balances;\
    mapping(address => mapping(address => uint)) public allowance;\
    uint public totalSupply = 9000000000000 * 10 ** 18;\
    string public name = "Pawn Coin";\
    string public symbol = "$Pc";\
    uint public decimals = 18;\
    \
    event Transfer(address indexed from, address indexed to, uint value);\
    event Approval(address indexed owner, address indexed spender, uint value);\
    \
    constructor() \{\
        balances[msg.sender] = totalSupply;\
    \}\
    \
    function balanceOf(address owner) public returns(uint) \{\
        return balances[owner];\
    \}\
    \
    function transfer(address to, uint value) public returns(bool) \{\
        require(balanceOf(msg.sender) >= value, 'balance too low');\
        balances[to] += value;\
        balances[msg.sender] -= value;\
       emit Transfer(msg.sender, to, value);\
        return true;\
    \}\
    \
    function transferFrom(address from, address to, uint value) public returns(bool) \{\
        require(balanceOf(from) >= value, 'balance too low');\
        require(allowance[from][msg.sender] >= value, 'allowance too low');\
        balances[to] += value;\
        balances[from] -= value;\
        emit Transfer(from, to, value);\
        return true;   \
    \}\
    \
    function approve(address spender, uint value) public returns (bool) \{\
        allowance[msg.sender][spender] = value;\
        emit Approval(msg.sender, spender, value);\
        return true;   \
    \}\
\}}